CC = gcc
CCFLAGS = -Wall --pedantic -O2 -w
CFLAGS_XML = -I/usr/include/libxml2
LIBS_COMEDI = -lcomedi -lm
LIBS_RT = -lpthread -D_GNU_SOURCE -lrt
LIBS_XML = -lxml2

#clamp/clamp-cli_preempt: obj/clamp-cli_preempt.o obj/neuron_models_functions.o obj/synapse_models_functions.o obj/rt_thread_functions.o obj/writer_thread_functions.o obj/device_functions.o obj/calibrate_functions_phase1.o obj/calibrate_functions_phase2.o obj/calibrate_functions_phase2_a.o  obj/time_functions.o obj/queue_functions.o obj/xml_clamp_parser.o obj/xml_parser_functions.o
#	$(CC) $(CCFLAGS) $(CFLAGS_XML) -o clamp/clamp-cli_preempt obj/clamp-cli_preempt.o obj/neuron_models_functions.o obj/synapse_models_functions.o obj/rt_thread_functions.o obj/writer_thread_functions.o obj/device_functions.o obj/calibrate_functions_phase1.o obj/calibrate_functions_phase2.o obj/calibrate_functions_phase2_a.o obj/time_functions.o obj/queue_functions.o obj/xml_clamp_parser.o obj/xml_parser_functions.o $(LIBS_COMEDI) $(LIBS_RT) $(LIBS_XML)
#	@echo "\n\t\033[32mCompiled and created clamp-cli_preempt\033[00m\n"
#
#obj/clamp-cli_preempt.o: clamp/src/clamp-cli_preempt.c
#	@echo "\n\t\033[31mCompiling and creating clamp-cli_preempt\033[00m\n"
#	$(CC) $(CCFLAGS) $(CFLAGS_XML) -c $(LIBS_COMEDI) clamp/src/clamp-cli_preempt.c -o obj/clamp-cli_preempt.o

clamp/stand_alone_clamp: obj/stand_alone_clamp.o obj/neuron_models_functions.o obj/synapse_models_functions.o obj/rt_thread_functions.o obj/writer_thread_functions.o obj/device_functions.o obj/calibrate_functions_phase1.o obj/calibrate_functions_phase2.o obj/calibrate_functions_phase2_a.o  obj/time_functions.o obj/queue_functions.o obj/xml_clamp_parser.o obj/xml_parser_functions.o obj/clamp.o obj/aux_functions.o
	$(CC) $(CCFLAGS) $(CFLAGS_XML) -o clamp/stand_alone_clamp obj/stand_alone_clamp.o obj/neuron_models_functions.o obj/synapse_models_functions.o obj/rt_thread_functions.o obj/writer_thread_functions.o obj/device_functions.o obj/calibrate_functions_phase1.o obj/calibrate_functions_phase2.o obj/calibrate_functions_phase2_a.o obj/time_functions.o obj/queue_functions.o obj/xml_clamp_parser.o obj/xml_parser_functions.o obj/clamp.o obj/aux_functions.o $(LIBS_COMEDI) $(LIBS_RT) $(LIBS_XML)
	@echo "\n\t\033[32mCompiled and created stand_alone_clamp\033[00m\n"

obj/stand_alone_clamp.o: clamp/src/stand_alone_clamp.c
	@echo "\n\t\033[31mCompiling and creating stand_alone_clamp\033[00m\n"
	$(CC) $(CCFLAGS) $(CFLAGS_XML) -c $(LIBS_COMEDI) clamp/src/stand_alone_clamp.c -o obj/stand_alone_clamp.o

obj/clamp.o: clamp/src/clamp.c clamp/includes/clamp.h
	$(CC) $(CCFLAGS) -c $(LIBS_COMEDI) clamp/src/clamp.c -o obj/clamp.o

obj/neuron_models_functions.o: clamp/src/neuron_models_functions.c clamp/includes/neuron_models_functions.h
	$(CC) $(CCFLAGS) -c clamp/src/neuron_models_functions.c -o obj/neuron_models_functions.o

obj/synapse_models_functions.o: clamp/src/synapse_models_functions.c clamp/includes/synapse_models_functions.h
	$(CC) $(CCFLAGS) -c clamp/src/synapse_models_functions.c -o obj/synapse_models_functions.o

obj/rt_thread_functions.o: clamp/src/rt_thread_functions.c clamp/includes/rt_thread_functions.h clamp/includes/queue_functions.h common/includes/types.h
	$(CC) $(CCFLAGS) -c $(LIBS_COMEDI) $(LIBS_RT) clamp/src/rt_thread_functions.c -o obj/rt_thread_functions.o

obj/writer_thread_functions.o: clamp/src/writer_thread_functions.c clamp/includes/writer_thread_functions.h clamp/includes/queue_functions.h
	$(CC) $(CCFLAGS) -c clamp/src/writer_thread_functions.c -o obj/writer_thread_functions.o

obj/device_functions.o: clamp/src/comedi_functions.c clamp/includes/device_functions.h clamp/includes/types_clamp.h common/includes/types.h
	$(CC) $(CCFLAGS) -c $(LIBS_COMEDI) clamp/src/comedi_functions.c -o obj/device_functions.o

obj/calibrate_functions_phase2_a.o: clamp/src/calibrate_functions_phase2_a.c clamp/includes/calibrate_functions_phase2_a.h clamp/includes/types_clamp.h common/includes/types.h
	$(CC) $(CCFLAGS) -c clamp/src/calibrate_functions_phase2_a.c -o obj/calibrate_functions_phase2_a.o

obj/calibrate_functions_phase1.o: clamp/src/calibrate_functions_phase1.c clamp/includes/calibrate_functions_phase1.h
	$(CC) $(CCFLAGS) -c clamp/src/calibrate_functions_phase1.c -o obj/calibrate_functions_phase1.o

obj/calibrate_functions_phase2.o: clamp/src/calibrate_functions_phase2.c clamp/includes/calibrate_functions_phase2.h
	$(CC) $(CCFLAGS) -c clamp/src/calibrate_functions_phase2.c -o obj/calibrate_functions_phase2.o

obj/time_functions.o: clamp/src/time_functions.c clamp/includes/time_functions.h
	$(CC) $(CCFLAGS) -c clamp/src/time_functions.c -o obj/time_functions.o

obj/queue_functions.o: clamp/src/queue_functions.c clamp/includes/queue_functions.h clamp/includes/types_clamp.h common/includes/types.h common/includes/types.h
	$(CC) $(CCFLAGS) -c clamp/src/queue_functions.c -o obj/queue_functions.o

obj/xml_clamp_parser.o: clamp/src/xml_clamp_parser.c clamp/includes/xml_clamp_parser.h clamp/includes/neuron_models_functions.h clamp/includes/synapse_models_functions.h clamp/includes/types_clamp.h common/includes/types.h
	$(CC) $(CCFLAGS) $(CFLAGS_XML) -c clamp/src/xml_clamp_parser.c -o obj/xml_clamp_parser.o

obj/xml_parser_functions.o: common/src/xml_parser_functions.c common/includes/xml_parser_functions.h common/includes/types.h
	$(CC) $(CCFLAGS) $(CFLAGS_XML) -c common/src/xml_parser_functions.c -o obj/xml_parser_functions.o

obj/aux_functions.o: common/includes/types.h common/src/aux_functions.c
	$(CC) $(CCFLAGS) -c common/src/aux_functions.c -o obj/aux_functions.o

clean:
	rm -f clamp/stand_alone_clamp obj/*.o 

mclan:
	rm -f clamp/stand_alone_clamp obj/*.o
	make -f Makefile_clamp